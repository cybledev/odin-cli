// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CybleComOdinAPIControllersV2IpservicesErrorResponse cyble com odin api controllers v2 ipservices error response
//
// swagger:model cyble_com_odin_api_controllers_v2_ipservices.ErrorResponse
type CybleComOdinAPIControllersV2IpservicesErrorResponse struct {

	// message
	Message string `json:"message,omitempty"`

	// success
	Success bool `json:"success,omitempty"`
}

// Validate validates this cyble com odin api controllers v2 ipservices error response
func (m *CybleComOdinAPIControllersV2IpservicesErrorResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cyble com odin api controllers v2 ipservices error response based on context it is used
func (m *CybleComOdinAPIControllersV2IpservicesErrorResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CybleComOdinAPIControllersV2IpservicesErrorResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CybleComOdinAPIControllersV2IpservicesErrorResponse) UnmarshalBinary(b []byte) error {
	var res CybleComOdinAPIControllersV2IpservicesErrorResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
