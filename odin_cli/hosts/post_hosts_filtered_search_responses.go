// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cybledev/odin-cli/models"
)

// PostHostsFilteredSearchReader is a Reader for the PostHostsFilteredSearch structure.
type PostHostsFilteredSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostHostsFilteredSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostHostsFilteredSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400,402,401:
		result := NewPostHostsFilteredSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostHostsFilteredSearchRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostHostsFilteredSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /hosts/filtered/search] PostHostsFilteredSearch", response, response.Code())
	}
}

// NewPostHostsFilteredSearchOK creates a PostHostsFilteredSearchOK with default headers values
func NewPostHostsFilteredSearchOK() *PostHostsFilteredSearchOK {
	return &PostHostsFilteredSearchOK{}
}

/*
PostHostsFilteredSearchOK describes a response with status code 200, with default header values.

OK
*/
type PostHostsFilteredSearchOK struct {
	Payload *PostHostsFilteredSearchOKBody
}

// IsSuccess returns true when this post hosts filtered search o k response has a 2xx status code
func (o *PostHostsFilteredSearchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post hosts filtered search o k response has a 3xx status code
func (o *PostHostsFilteredSearchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post hosts filtered search o k response has a 4xx status code
func (o *PostHostsFilteredSearchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post hosts filtered search o k response has a 5xx status code
func (o *PostHostsFilteredSearchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post hosts filtered search o k response a status code equal to that given
func (o *PostHostsFilteredSearchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post hosts filtered search o k response
func (o *PostHostsFilteredSearchOK) Code() int {
	return 200
}

func (o *PostHostsFilteredSearchOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /hosts/filtered/search][%d] postHostsFilteredSearchOK %s", 200, payload)
}

func (o *PostHostsFilteredSearchOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /hosts/filtered/search][%d] postHostsFilteredSearchOK %s", 200, payload)
}

func (o *PostHostsFilteredSearchOK) GetPayload() *PostHostsFilteredSearchOKBody {
	return o.Payload
}

func (o *PostHostsFilteredSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostHostsFilteredSearchOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostHostsFilteredSearchBadRequest creates a PostHostsFilteredSearchBadRequest with default headers values
func NewPostHostsFilteredSearchBadRequest() *PostHostsFilteredSearchBadRequest {
	return &PostHostsFilteredSearchBadRequest{}
}

/*
PostHostsFilteredSearchBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostHostsFilteredSearchBadRequest struct {
	Payload *models.IpservicesErrorResponse
}

// IsSuccess returns true when this post hosts filtered search bad request response has a 2xx status code
func (o *PostHostsFilteredSearchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post hosts filtered search bad request response has a 3xx status code
func (o *PostHostsFilteredSearchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post hosts filtered search bad request response has a 4xx status code
func (o *PostHostsFilteredSearchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post hosts filtered search bad request response has a 5xx status code
func (o *PostHostsFilteredSearchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post hosts filtered search bad request response a status code equal to that given
func (o *PostHostsFilteredSearchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post hosts filtered search bad request response
func (o *PostHostsFilteredSearchBadRequest) Code() int {
	return 400
}

func (o *PostHostsFilteredSearchBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /hosts/filtered/search][%d] postHostsFilteredSearchBadRequest %s", 400, payload)
}

func (o *PostHostsFilteredSearchBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /hosts/filtered/search][%d] postHostsFilteredSearchBadRequest %s", 400, payload)
}

func (o *PostHostsFilteredSearchBadRequest) GetPayload() *models.IpservicesErrorResponse {
	return o.Payload
}

func (o *PostHostsFilteredSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostHostsFilteredSearchRequestTimeout creates a PostHostsFilteredSearchRequestTimeout with default headers values
func NewPostHostsFilteredSearchRequestTimeout() *PostHostsFilteredSearchRequestTimeout {
	return &PostHostsFilteredSearchRequestTimeout{}
}

/*
PostHostsFilteredSearchRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type PostHostsFilteredSearchRequestTimeout struct {
	Payload *models.IpservicesErrorResponse
}

// IsSuccess returns true when this post hosts filtered search request timeout response has a 2xx status code
func (o *PostHostsFilteredSearchRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post hosts filtered search request timeout response has a 3xx status code
func (o *PostHostsFilteredSearchRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post hosts filtered search request timeout response has a 4xx status code
func (o *PostHostsFilteredSearchRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post hosts filtered search request timeout response has a 5xx status code
func (o *PostHostsFilteredSearchRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post hosts filtered search request timeout response a status code equal to that given
func (o *PostHostsFilteredSearchRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the post hosts filtered search request timeout response
func (o *PostHostsFilteredSearchRequestTimeout) Code() int {
	return 408
}

func (o *PostHostsFilteredSearchRequestTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /hosts/filtered/search][%d] postHostsFilteredSearchRequestTimeout %s", 408, payload)
}

func (o *PostHostsFilteredSearchRequestTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /hosts/filtered/search][%d] postHostsFilteredSearchRequestTimeout %s", 408, payload)
}

func (o *PostHostsFilteredSearchRequestTimeout) GetPayload() *models.IpservicesErrorResponse {
	return o.Payload
}

func (o *PostHostsFilteredSearchRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostHostsFilteredSearchInternalServerError creates a PostHostsFilteredSearchInternalServerError with default headers values
func NewPostHostsFilteredSearchInternalServerError() *PostHostsFilteredSearchInternalServerError {
	return &PostHostsFilteredSearchInternalServerError{}
}

/*
PostHostsFilteredSearchInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostHostsFilteredSearchInternalServerError struct {
	Payload *models.IpservicesErrorResponse
}

// IsSuccess returns true when this post hosts filtered search internal server error response has a 2xx status code
func (o *PostHostsFilteredSearchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post hosts filtered search internal server error response has a 3xx status code
func (o *PostHostsFilteredSearchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post hosts filtered search internal server error response has a 4xx status code
func (o *PostHostsFilteredSearchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post hosts filtered search internal server error response has a 5xx status code
func (o *PostHostsFilteredSearchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post hosts filtered search internal server error response a status code equal to that given
func (o *PostHostsFilteredSearchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post hosts filtered search internal server error response
func (o *PostHostsFilteredSearchInternalServerError) Code() int {
	return 500
}

func (o *PostHostsFilteredSearchInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /hosts/filtered/search][%d] postHostsFilteredSearchInternalServerError %s", 500, payload)
}

func (o *PostHostsFilteredSearchInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /hosts/filtered/search][%d] postHostsFilteredSearchInternalServerError %s", 500, payload)
}

func (o *PostHostsFilteredSearchInternalServerError) GetPayload() *models.IpservicesErrorResponse {
	return o.Payload
}

func (o *PostHostsFilteredSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostHostsFilteredSearchOKBody post hosts filtered search o k body
swagger:model PostHostsFilteredSearchOKBody
*/
type PostHostsFilteredSearchOKBody struct {
	models.IpservicesAPIResponse

	// data
	Data []interface{} `json:"data"`

	// pagination
	Pagination *models.IpservicesSearchPagination `json:"pagination,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PostHostsFilteredSearchOKBody) UnmarshalJSON(raw []byte) error {
	// PostHostsFilteredSearchOKBodyAO0
	var postHostsFilteredSearchOKBodyAO0 models.IpservicesAPIResponse
	if err := swag.ReadJSON(raw, &postHostsFilteredSearchOKBodyAO0); err != nil {
		return err
	}
	o.IpservicesAPIResponse = postHostsFilteredSearchOKBodyAO0

	// PostHostsFilteredSearchOKBodyAO1
	var dataPostHostsFilteredSearchOKBodyAO1 struct {
		Data []interface{} `json:"data"`

		Pagination *models.IpservicesSearchPagination `json:"pagination,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataPostHostsFilteredSearchOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataPostHostsFilteredSearchOKBodyAO1.Data

	o.Pagination = dataPostHostsFilteredSearchOKBodyAO1.Pagination

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PostHostsFilteredSearchOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	postHostsFilteredSearchOKBodyAO0, err := swag.WriteJSON(o.IpservicesAPIResponse)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, postHostsFilteredSearchOKBodyAO0)
	var dataPostHostsFilteredSearchOKBodyAO1 struct {
		Data []interface{} `json:"data"`

		Pagination *models.IpservicesSearchPagination `json:"pagination,omitempty"`
	}

	dataPostHostsFilteredSearchOKBodyAO1.Data = o.Data

	dataPostHostsFilteredSearchOKBodyAO1.Pagination = o.Pagination

	jsonDataPostHostsFilteredSearchOKBodyAO1, errPostHostsFilteredSearchOKBodyAO1 := swag.WriteJSON(dataPostHostsFilteredSearchOKBodyAO1)
	if errPostHostsFilteredSearchOKBodyAO1 != nil {
		return nil, errPostHostsFilteredSearchOKBodyAO1
	}
	_parts = append(_parts, jsonDataPostHostsFilteredSearchOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this post hosts filtered search o k body
func (o *PostHostsFilteredSearchOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.IpservicesAPIResponse
	if err := o.IpservicesAPIResponse.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePagination(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostHostsFilteredSearchOKBody) validatePagination(formats strfmt.Registry) error {

	if swag.IsZero(o.Pagination) { // not required
		return nil
	}

	if o.Pagination != nil {
		if err := o.Pagination.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postHostsFilteredSearchOK" + "." + "pagination")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postHostsFilteredSearchOK" + "." + "pagination")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post hosts filtered search o k body based on the context it is used
func (o *PostHostsFilteredSearchOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.IpservicesAPIResponse
	if err := o.IpservicesAPIResponse.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidatePagination(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostHostsFilteredSearchOKBody) contextValidatePagination(ctx context.Context, formats strfmt.Registry) error {

	if o.Pagination != nil {

		if swag.IsZero(o.Pagination) { // not required
			return nil
		}

		if err := o.Pagination.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postHostsFilteredSearchOK" + "." + "pagination")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postHostsFilteredSearchOK" + "." + "pagination")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostHostsFilteredSearchOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostHostsFilteredSearchOKBody) UnmarshalBinary(b []byte) error {
	var res PostHostsFilteredSearchOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
