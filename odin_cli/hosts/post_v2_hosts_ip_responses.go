// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cybledev/odin-cli/models"
)

// PostV2HostsIPReader is a Reader for the PostV2HostsIP structure.
type PostV2HostsIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV2HostsIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostV2HostsIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400,401:
		result := NewPostV2HostsIPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewPostV2HostsIPPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostV2HostsIPRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV2HostsIPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v2/hosts/{ip}] PostV2HostsIP", response, response.Code())
	}
}

// NewPostV2HostsIPOK creates a PostV2HostsIPOK with default headers values
func NewPostV2HostsIPOK() *PostV2HostsIPOK {
	return &PostV2HostsIPOK{}
}

/*
PostV2HostsIPOK describes a response with status code 200, with default header values.

OK
*/
type PostV2HostsIPOK struct {
	Payload *models.CybleComOdinAPIControllersV2IpservicesAPIResponse
}

// IsSuccess returns true when this post v2 hosts Ip o k response has a 2xx status code
func (o *PostV2HostsIPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v2 hosts Ip o k response has a 3xx status code
func (o *PostV2HostsIPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v2 hosts Ip o k response has a 4xx status code
func (o *PostV2HostsIPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v2 hosts Ip o k response has a 5xx status code
func (o *PostV2HostsIPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post v2 hosts Ip o k response a status code equal to that given
func (o *PostV2HostsIPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post v2 hosts Ip o k response
func (o *PostV2HostsIPOK) Code() int {
	return 200
}

func (o *PostV2HostsIPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/{ip}][%d] postV2HostsIpOK %s", 200, payload)
}

func (o *PostV2HostsIPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/{ip}][%d] postV2HostsIpOK %s", 200, payload)
}

func (o *PostV2HostsIPOK) GetPayload() *models.CybleComOdinAPIControllersV2IpservicesAPIResponse {
	return o.Payload
}

func (o *PostV2HostsIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CybleComOdinAPIControllersV2IpservicesAPIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV2HostsIPBadRequest creates a PostV2HostsIPBadRequest with default headers values
func NewPostV2HostsIPBadRequest() *PostV2HostsIPBadRequest {
	return &PostV2HostsIPBadRequest{}
}

/*
PostV2HostsIPBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV2HostsIPBadRequest struct {
	Payload *models.CybleComOdinAPIControllersV2IpservicesErrorResponse
}

// IsSuccess returns true when this post v2 hosts Ip bad request response has a 2xx status code
func (o *PostV2HostsIPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v2 hosts Ip bad request response has a 3xx status code
func (o *PostV2HostsIPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v2 hosts Ip bad request response has a 4xx status code
func (o *PostV2HostsIPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v2 hosts Ip bad request response has a 5xx status code
func (o *PostV2HostsIPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v2 hosts Ip bad request response a status code equal to that given
func (o *PostV2HostsIPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v2 hosts Ip bad request response
func (o *PostV2HostsIPBadRequest) Code() int {
	return 400
}

func (o *PostV2HostsIPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/{ip}][%d] postV2HostsIpBadRequest %s", 400, payload)
}

func (o *PostV2HostsIPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/{ip}][%d] postV2HostsIpBadRequest %s", 400, payload)
}

func (o *PostV2HostsIPBadRequest) GetPayload() *models.CybleComOdinAPIControllersV2IpservicesErrorResponse {
	return o.Payload
}

func (o *PostV2HostsIPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CybleComOdinAPIControllersV2IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV2HostsIPPaymentRequired creates a PostV2HostsIPPaymentRequired with default headers values
func NewPostV2HostsIPPaymentRequired() *PostV2HostsIPPaymentRequired {
	return &PostV2HostsIPPaymentRequired{}
}

/*
PostV2HostsIPPaymentRequired describes a response with status code 402, with default header values.

Payment Required
*/
type PostV2HostsIPPaymentRequired struct {
	Payload *models.CybleComOdinAPIControllersV2IpservicesErrorResponse
}

// IsSuccess returns true when this post v2 hosts Ip payment required response has a 2xx status code
func (o *PostV2HostsIPPaymentRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v2 hosts Ip payment required response has a 3xx status code
func (o *PostV2HostsIPPaymentRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v2 hosts Ip payment required response has a 4xx status code
func (o *PostV2HostsIPPaymentRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v2 hosts Ip payment required response has a 5xx status code
func (o *PostV2HostsIPPaymentRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this post v2 hosts Ip payment required response a status code equal to that given
func (o *PostV2HostsIPPaymentRequired) IsCode(code int) bool {
	return code == 402
}

// Code gets the status code for the post v2 hosts Ip payment required response
func (o *PostV2HostsIPPaymentRequired) Code() int {
	return 402
}

func (o *PostV2HostsIPPaymentRequired) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/{ip}][%d] postV2HostsIpPaymentRequired %s", 402, payload)
}

func (o *PostV2HostsIPPaymentRequired) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/{ip}][%d] postV2HostsIpPaymentRequired %s", 402, payload)
}

func (o *PostV2HostsIPPaymentRequired) GetPayload() *models.CybleComOdinAPIControllersV2IpservicesErrorResponse {
	return o.Payload
}

func (o *PostV2HostsIPPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CybleComOdinAPIControllersV2IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV2HostsIPRequestTimeout creates a PostV2HostsIPRequestTimeout with default headers values
func NewPostV2HostsIPRequestTimeout() *PostV2HostsIPRequestTimeout {
	return &PostV2HostsIPRequestTimeout{}
}

/*
PostV2HostsIPRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type PostV2HostsIPRequestTimeout struct {
	Payload *models.CybleComOdinAPIControllersV2IpservicesErrorResponse
}

// IsSuccess returns true when this post v2 hosts Ip request timeout response has a 2xx status code
func (o *PostV2HostsIPRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v2 hosts Ip request timeout response has a 3xx status code
func (o *PostV2HostsIPRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v2 hosts Ip request timeout response has a 4xx status code
func (o *PostV2HostsIPRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v2 hosts Ip request timeout response has a 5xx status code
func (o *PostV2HostsIPRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post v2 hosts Ip request timeout response a status code equal to that given
func (o *PostV2HostsIPRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the post v2 hosts Ip request timeout response
func (o *PostV2HostsIPRequestTimeout) Code() int {
	return 408
}

func (o *PostV2HostsIPRequestTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/{ip}][%d] postV2HostsIpRequestTimeout %s", 408, payload)
}

func (o *PostV2HostsIPRequestTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/{ip}][%d] postV2HostsIpRequestTimeout %s", 408, payload)
}

func (o *PostV2HostsIPRequestTimeout) GetPayload() *models.CybleComOdinAPIControllersV2IpservicesErrorResponse {
	return o.Payload
}

func (o *PostV2HostsIPRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CybleComOdinAPIControllersV2IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV2HostsIPInternalServerError creates a PostV2HostsIPInternalServerError with default headers values
func NewPostV2HostsIPInternalServerError() *PostV2HostsIPInternalServerError {
	return &PostV2HostsIPInternalServerError{}
}

/*
PostV2HostsIPInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostV2HostsIPInternalServerError struct {
	Payload *models.CybleComOdinAPIControllersV2IpservicesErrorResponse
}

// IsSuccess returns true when this post v2 hosts Ip internal server error response has a 2xx status code
func (o *PostV2HostsIPInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v2 hosts Ip internal server error response has a 3xx status code
func (o *PostV2HostsIPInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v2 hosts Ip internal server error response has a 4xx status code
func (o *PostV2HostsIPInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v2 hosts Ip internal server error response has a 5xx status code
func (o *PostV2HostsIPInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post v2 hosts Ip internal server error response a status code equal to that given
func (o *PostV2HostsIPInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post v2 hosts Ip internal server error response
func (o *PostV2HostsIPInternalServerError) Code() int {
	return 500
}

func (o *PostV2HostsIPInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/{ip}][%d] postV2HostsIpInternalServerError %s", 500, payload)
}

func (o *PostV2HostsIPInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/{ip}][%d] postV2HostsIpInternalServerError %s", 500, payload)
}

func (o *PostV2HostsIPInternalServerError) GetPayload() *models.CybleComOdinAPIControllersV2IpservicesErrorResponse {
	return o.Payload
}

func (o *PostV2HostsIPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CybleComOdinAPIControllersV2IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
