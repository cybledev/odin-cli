// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cybledev/odin-cli/models"
)

// GetHostsExploitsIPReader is a Reader for the GetHostsExploitsIP structure.
type GetHostsExploitsIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHostsExploitsIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHostsExploitsIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400,402,401:
		result := NewGetHostsExploitsIPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetHostsExploitsIPRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHostsExploitsIPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /hosts/exploits/{ip}/] GetHostsExploitsIP", response, response.Code())
	}
}

// NewGetHostsExploitsIPOK creates a GetHostsExploitsIPOK with default headers values
func NewGetHostsExploitsIPOK() *GetHostsExploitsIPOK {
	return &GetHostsExploitsIPOK{}
}

/*
GetHostsExploitsIPOK describes a response with status code 200, with default header values.

OK
*/
type GetHostsExploitsIPOK struct {
	Payload *models.IpservicesAPIResponse
}

// IsSuccess returns true when this get hosts exploits Ip o k response has a 2xx status code
func (o *GetHostsExploitsIPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get hosts exploits Ip o k response has a 3xx status code
func (o *GetHostsExploitsIPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts exploits Ip o k response has a 4xx status code
func (o *GetHostsExploitsIPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get hosts exploits Ip o k response has a 5xx status code
func (o *GetHostsExploitsIPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get hosts exploits Ip o k response a status code equal to that given
func (o *GetHostsExploitsIPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get hosts exploits Ip o k response
func (o *GetHostsExploitsIPOK) Code() int {
	return 200
}

func (o *GetHostsExploitsIPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/exploits/{ip}/][%d] getHostsExploitsIpOK %s", 200, payload)
}

func (o *GetHostsExploitsIPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/exploits/{ip}/][%d] getHostsExploitsIpOK %s", 200, payload)
}

func (o *GetHostsExploitsIPOK) GetPayload() *models.IpservicesAPIResponse {
	return o.Payload
}

func (o *GetHostsExploitsIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesAPIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsExploitsIPBadRequest creates a GetHostsExploitsIPBadRequest with default headers values
func NewGetHostsExploitsIPBadRequest() *GetHostsExploitsIPBadRequest {
	return &GetHostsExploitsIPBadRequest{}
}

/*
GetHostsExploitsIPBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetHostsExploitsIPBadRequest struct {
	Payload *models.IpservicesErrorResponse
}

// IsSuccess returns true when this get hosts exploits Ip bad request response has a 2xx status code
func (o *GetHostsExploitsIPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get hosts exploits Ip bad request response has a 3xx status code
func (o *GetHostsExploitsIPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts exploits Ip bad request response has a 4xx status code
func (o *GetHostsExploitsIPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get hosts exploits Ip bad request response has a 5xx status code
func (o *GetHostsExploitsIPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get hosts exploits Ip bad request response a status code equal to that given
func (o *GetHostsExploitsIPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get hosts exploits Ip bad request response
func (o *GetHostsExploitsIPBadRequest) Code() int {
	return 400
}

func (o *GetHostsExploitsIPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/exploits/{ip}/][%d] getHostsExploitsIpBadRequest %s", 400, payload)
}

func (o *GetHostsExploitsIPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/exploits/{ip}/][%d] getHostsExploitsIpBadRequest %s", 400, payload)
}

func (o *GetHostsExploitsIPBadRequest) GetPayload() *models.IpservicesErrorResponse {
	return o.Payload
}

func (o *GetHostsExploitsIPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsExploitsIPRequestTimeout creates a GetHostsExploitsIPRequestTimeout with default headers values
func NewGetHostsExploitsIPRequestTimeout() *GetHostsExploitsIPRequestTimeout {
	return &GetHostsExploitsIPRequestTimeout{}
}

/*
GetHostsExploitsIPRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetHostsExploitsIPRequestTimeout struct {
	Payload *models.IpservicesErrorResponse
}

// IsSuccess returns true when this get hosts exploits Ip request timeout response has a 2xx status code
func (o *GetHostsExploitsIPRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get hosts exploits Ip request timeout response has a 3xx status code
func (o *GetHostsExploitsIPRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts exploits Ip request timeout response has a 4xx status code
func (o *GetHostsExploitsIPRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get hosts exploits Ip request timeout response has a 5xx status code
func (o *GetHostsExploitsIPRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get hosts exploits Ip request timeout response a status code equal to that given
func (o *GetHostsExploitsIPRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get hosts exploits Ip request timeout response
func (o *GetHostsExploitsIPRequestTimeout) Code() int {
	return 408
}

func (o *GetHostsExploitsIPRequestTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/exploits/{ip}/][%d] getHostsExploitsIpRequestTimeout %s", 408, payload)
}

func (o *GetHostsExploitsIPRequestTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/exploits/{ip}/][%d] getHostsExploitsIpRequestTimeout %s", 408, payload)
}

func (o *GetHostsExploitsIPRequestTimeout) GetPayload() *models.IpservicesErrorResponse {
	return o.Payload
}

func (o *GetHostsExploitsIPRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsExploitsIPInternalServerError creates a GetHostsExploitsIPInternalServerError with default headers values
func NewGetHostsExploitsIPInternalServerError() *GetHostsExploitsIPInternalServerError {
	return &GetHostsExploitsIPInternalServerError{}
}

/*
GetHostsExploitsIPInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetHostsExploitsIPInternalServerError struct {
	Payload *models.IpservicesErrorResponse
}

// IsSuccess returns true when this get hosts exploits Ip internal server error response has a 2xx status code
func (o *GetHostsExploitsIPInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get hosts exploits Ip internal server error response has a 3xx status code
func (o *GetHostsExploitsIPInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts exploits Ip internal server error response has a 4xx status code
func (o *GetHostsExploitsIPInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get hosts exploits Ip internal server error response has a 5xx status code
func (o *GetHostsExploitsIPInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get hosts exploits Ip internal server error response a status code equal to that given
func (o *GetHostsExploitsIPInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get hosts exploits Ip internal server error response
func (o *GetHostsExploitsIPInternalServerError) Code() int {
	return 500
}

func (o *GetHostsExploitsIPInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/exploits/{ip}/][%d] getHostsExploitsIpInternalServerError %s", 500, payload)
}

func (o *GetHostsExploitsIPInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/exploits/{ip}/][%d] getHostsExploitsIpInternalServerError %s", 500, payload)
}

func (o *GetHostsExploitsIPInternalServerError) GetPayload() *models.IpservicesErrorResponse {
	return o.Payload
}

func (o *GetHostsExploitsIPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
