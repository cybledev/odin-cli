// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cybledev/odin-cli/models"
)

// GetHostsIPReader is a Reader for the GetHostsIP structure.
type GetHostsIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHostsIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHostsIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400,402,401:
		result := NewGetHostsIPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewGetHostsIPRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHostsIPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /hosts/{ip}/] GetHostsIP", response, response.Code())
	}
}

// NewGetHostsIPOK creates a GetHostsIPOK with default headers values
func NewGetHostsIPOK() *GetHostsIPOK {
	return &GetHostsIPOK{}
}

/*
GetHostsIPOK describes a response with status code 200, with default header values.

OK
*/
type GetHostsIPOK struct {
	Payload *models.IpservicesAPIResponse
}

// IsSuccess returns true when this get hosts Ip o k response has a 2xx status code
func (o *GetHostsIPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get hosts Ip o k response has a 3xx status code
func (o *GetHostsIPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts Ip o k response has a 4xx status code
func (o *GetHostsIPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get hosts Ip o k response has a 5xx status code
func (o *GetHostsIPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get hosts Ip o k response a status code equal to that given
func (o *GetHostsIPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get hosts Ip o k response
func (o *GetHostsIPOK) Code() int {
	return 200
}

func (o *GetHostsIPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/{ip}/][%d] getHostsIpOK %s", 200, payload)
}

func (o *GetHostsIPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/{ip}/][%d] getHostsIpOK %s", 200, payload)
}

func (o *GetHostsIPOK) GetPayload() *models.IpservicesAPIResponse {
	return o.Payload
}

func (o *GetHostsIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesAPIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsIPBadRequest creates a GetHostsIPBadRequest with default headers values
func NewGetHostsIPBadRequest() *GetHostsIPBadRequest {
	return &GetHostsIPBadRequest{}
}

/*
GetHostsIPBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetHostsIPBadRequest struct {
	Payload *models.IpservicesErrorResponse
}

// IsSuccess returns true when this get hosts Ip bad request response has a 2xx status code
func (o *GetHostsIPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get hosts Ip bad request response has a 3xx status code
func (o *GetHostsIPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts Ip bad request response has a 4xx status code
func (o *GetHostsIPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get hosts Ip bad request response has a 5xx status code
func (o *GetHostsIPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get hosts Ip bad request response a status code equal to that given
func (o *GetHostsIPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get hosts Ip bad request response
func (o *GetHostsIPBadRequest) Code() int {
	return 400
}

func (o *GetHostsIPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/{ip}/][%d] getHostsIpBadRequest %s", 400, payload)
}

func (o *GetHostsIPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/{ip}/][%d] getHostsIpBadRequest %s", 400, payload)
}

func (o *GetHostsIPBadRequest) GetPayload() *models.IpservicesErrorResponse {
	return o.Payload
}

func (o *GetHostsIPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsIPRequestTimeout creates a GetHostsIPRequestTimeout with default headers values
func NewGetHostsIPRequestTimeout() *GetHostsIPRequestTimeout {
	return &GetHostsIPRequestTimeout{}
}

/*
GetHostsIPRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type GetHostsIPRequestTimeout struct {
	Payload *models.IpservicesErrorResponse
}

// IsSuccess returns true when this get hosts Ip request timeout response has a 2xx status code
func (o *GetHostsIPRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get hosts Ip request timeout response has a 3xx status code
func (o *GetHostsIPRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts Ip request timeout response has a 4xx status code
func (o *GetHostsIPRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this get hosts Ip request timeout response has a 5xx status code
func (o *GetHostsIPRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this get hosts Ip request timeout response a status code equal to that given
func (o *GetHostsIPRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the get hosts Ip request timeout response
func (o *GetHostsIPRequestTimeout) Code() int {
	return 408
}

func (o *GetHostsIPRequestTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/{ip}/][%d] getHostsIpRequestTimeout %s", 408, payload)
}

func (o *GetHostsIPRequestTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/{ip}/][%d] getHostsIpRequestTimeout %s", 408, payload)
}

func (o *GetHostsIPRequestTimeout) GetPayload() *models.IpservicesErrorResponse {
	return o.Payload
}

func (o *GetHostsIPRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsIPInternalServerError creates a GetHostsIPInternalServerError with default headers values
func NewGetHostsIPInternalServerError() *GetHostsIPInternalServerError {
	return &GetHostsIPInternalServerError{}
}

/*
GetHostsIPInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetHostsIPInternalServerError struct {
	Payload *models.IpservicesErrorResponse
}

// IsSuccess returns true when this get hosts Ip internal server error response has a 2xx status code
func (o *GetHostsIPInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get hosts Ip internal server error response has a 3xx status code
func (o *GetHostsIPInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts Ip internal server error response has a 4xx status code
func (o *GetHostsIPInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get hosts Ip internal server error response has a 5xx status code
func (o *GetHostsIPInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get hosts Ip internal server error response a status code equal to that given
func (o *GetHostsIPInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get hosts Ip internal server error response
func (o *GetHostsIPInternalServerError) Code() int {
	return 500
}

func (o *GetHostsIPInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/{ip}/][%d] getHostsIpInternalServerError %s", 500, payload)
}

func (o *GetHostsIPInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /hosts/{ip}/][%d] getHostsIpInternalServerError %s", 500, payload)
}

func (o *GetHostsIPInternalServerError) GetPayload() *models.IpservicesErrorResponse {
	return o.Payload
}

func (o *GetHostsIPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
