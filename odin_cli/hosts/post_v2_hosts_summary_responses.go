// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cybledev/odin-cli/models"
)

// PostV2HostsSummaryReader is a Reader for the PostV2HostsSummary structure.
type PostV2HostsSummaryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV2HostsSummaryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostV2HostsSummaryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400,401:
		result := NewPostV2HostsSummaryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewPostV2HostsSummaryPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewPostV2HostsSummaryRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostV2HostsSummaryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v2/hosts/summary] PostV2HostsSummary", response, response.Code())
	}
}

// NewPostV2HostsSummaryOK creates a PostV2HostsSummaryOK with default headers values
func NewPostV2HostsSummaryOK() *PostV2HostsSummaryOK {
	return &PostV2HostsSummaryOK{}
}

/*
PostV2HostsSummaryOK describes a response with status code 200, with default header values.

OK
*/
type PostV2HostsSummaryOK struct {
	Payload *PostV2HostsSummaryOKBody
}

// IsSuccess returns true when this post v2 hosts summary o k response has a 2xx status code
func (o *PostV2HostsSummaryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v2 hosts summary o k response has a 3xx status code
func (o *PostV2HostsSummaryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v2 hosts summary o k response has a 4xx status code
func (o *PostV2HostsSummaryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v2 hosts summary o k response has a 5xx status code
func (o *PostV2HostsSummaryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post v2 hosts summary o k response a status code equal to that given
func (o *PostV2HostsSummaryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post v2 hosts summary o k response
func (o *PostV2HostsSummaryOK) Code() int {
	return 200
}

func (o *PostV2HostsSummaryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/summary][%d] postV2HostsSummaryOK %s", 200, payload)
}

func (o *PostV2HostsSummaryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/summary][%d] postV2HostsSummaryOK %s", 200, payload)
}

func (o *PostV2HostsSummaryOK) GetPayload() *PostV2HostsSummaryOKBody {
	return o.Payload
}

func (o *PostV2HostsSummaryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostV2HostsSummaryOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV2HostsSummaryBadRequest creates a PostV2HostsSummaryBadRequest with default headers values
func NewPostV2HostsSummaryBadRequest() *PostV2HostsSummaryBadRequest {
	return &PostV2HostsSummaryBadRequest{}
}

/*
PostV2HostsSummaryBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostV2HostsSummaryBadRequest struct {
	Payload *models.CybleComOdinAPIControllersV2IpservicesErrorResponse
}

// IsSuccess returns true when this post v2 hosts summary bad request response has a 2xx status code
func (o *PostV2HostsSummaryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v2 hosts summary bad request response has a 3xx status code
func (o *PostV2HostsSummaryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v2 hosts summary bad request response has a 4xx status code
func (o *PostV2HostsSummaryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v2 hosts summary bad request response has a 5xx status code
func (o *PostV2HostsSummaryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post v2 hosts summary bad request response a status code equal to that given
func (o *PostV2HostsSummaryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post v2 hosts summary bad request response
func (o *PostV2HostsSummaryBadRequest) Code() int {
	return 400
}

func (o *PostV2HostsSummaryBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/summary][%d] postV2HostsSummaryBadRequest %s", 400, payload)
}

func (o *PostV2HostsSummaryBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/summary][%d] postV2HostsSummaryBadRequest %s", 400, payload)
}

func (o *PostV2HostsSummaryBadRequest) GetPayload() *models.CybleComOdinAPIControllersV2IpservicesErrorResponse {
	return o.Payload
}

func (o *PostV2HostsSummaryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CybleComOdinAPIControllersV2IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV2HostsSummaryPaymentRequired creates a PostV2HostsSummaryPaymentRequired with default headers values
func NewPostV2HostsSummaryPaymentRequired() *PostV2HostsSummaryPaymentRequired {
	return &PostV2HostsSummaryPaymentRequired{}
}

/*
PostV2HostsSummaryPaymentRequired describes a response with status code 402, with default header values.

Payment Required
*/
type PostV2HostsSummaryPaymentRequired struct {
	Payload *models.CybleComOdinAPIControllersV2IpservicesErrorResponse
}

// IsSuccess returns true when this post v2 hosts summary payment required response has a 2xx status code
func (o *PostV2HostsSummaryPaymentRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v2 hosts summary payment required response has a 3xx status code
func (o *PostV2HostsSummaryPaymentRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v2 hosts summary payment required response has a 4xx status code
func (o *PostV2HostsSummaryPaymentRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v2 hosts summary payment required response has a 5xx status code
func (o *PostV2HostsSummaryPaymentRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this post v2 hosts summary payment required response a status code equal to that given
func (o *PostV2HostsSummaryPaymentRequired) IsCode(code int) bool {
	return code == 402
}

// Code gets the status code for the post v2 hosts summary payment required response
func (o *PostV2HostsSummaryPaymentRequired) Code() int {
	return 402
}

func (o *PostV2HostsSummaryPaymentRequired) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/summary][%d] postV2HostsSummaryPaymentRequired %s", 402, payload)
}

func (o *PostV2HostsSummaryPaymentRequired) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/summary][%d] postV2HostsSummaryPaymentRequired %s", 402, payload)
}

func (o *PostV2HostsSummaryPaymentRequired) GetPayload() *models.CybleComOdinAPIControllersV2IpservicesErrorResponse {
	return o.Payload
}

func (o *PostV2HostsSummaryPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CybleComOdinAPIControllersV2IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV2HostsSummaryRequestTimeout creates a PostV2HostsSummaryRequestTimeout with default headers values
func NewPostV2HostsSummaryRequestTimeout() *PostV2HostsSummaryRequestTimeout {
	return &PostV2HostsSummaryRequestTimeout{}
}

/*
PostV2HostsSummaryRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type PostV2HostsSummaryRequestTimeout struct {
	Payload *models.CybleComOdinAPIControllersV2IpservicesErrorResponse
}

// IsSuccess returns true when this post v2 hosts summary request timeout response has a 2xx status code
func (o *PostV2HostsSummaryRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v2 hosts summary request timeout response has a 3xx status code
func (o *PostV2HostsSummaryRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v2 hosts summary request timeout response has a 4xx status code
func (o *PostV2HostsSummaryRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v2 hosts summary request timeout response has a 5xx status code
func (o *PostV2HostsSummaryRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this post v2 hosts summary request timeout response a status code equal to that given
func (o *PostV2HostsSummaryRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the post v2 hosts summary request timeout response
func (o *PostV2HostsSummaryRequestTimeout) Code() int {
	return 408
}

func (o *PostV2HostsSummaryRequestTimeout) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/summary][%d] postV2HostsSummaryRequestTimeout %s", 408, payload)
}

func (o *PostV2HostsSummaryRequestTimeout) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/summary][%d] postV2HostsSummaryRequestTimeout %s", 408, payload)
}

func (o *PostV2HostsSummaryRequestTimeout) GetPayload() *models.CybleComOdinAPIControllersV2IpservicesErrorResponse {
	return o.Payload
}

func (o *PostV2HostsSummaryRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CybleComOdinAPIControllersV2IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV2HostsSummaryInternalServerError creates a PostV2HostsSummaryInternalServerError with default headers values
func NewPostV2HostsSummaryInternalServerError() *PostV2HostsSummaryInternalServerError {
	return &PostV2HostsSummaryInternalServerError{}
}

/*
PostV2HostsSummaryInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostV2HostsSummaryInternalServerError struct {
	Payload *models.CybleComOdinAPIControllersV2IpservicesErrorResponse
}

// IsSuccess returns true when this post v2 hosts summary internal server error response has a 2xx status code
func (o *PostV2HostsSummaryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v2 hosts summary internal server error response has a 3xx status code
func (o *PostV2HostsSummaryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v2 hosts summary internal server error response has a 4xx status code
func (o *PostV2HostsSummaryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v2 hosts summary internal server error response has a 5xx status code
func (o *PostV2HostsSummaryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post v2 hosts summary internal server error response a status code equal to that given
func (o *PostV2HostsSummaryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post v2 hosts summary internal server error response
func (o *PostV2HostsSummaryInternalServerError) Code() int {
	return 500
}

func (o *PostV2HostsSummaryInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/summary][%d] postV2HostsSummaryInternalServerError %s", 500, payload)
}

func (o *PostV2HostsSummaryInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/hosts/summary][%d] postV2HostsSummaryInternalServerError %s", 500, payload)
}

func (o *PostV2HostsSummaryInternalServerError) GetPayload() *models.CybleComOdinAPIControllersV2IpservicesErrorResponse {
	return o.Payload
}

func (o *PostV2HostsSummaryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CybleComOdinAPIControllersV2IpservicesErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostV2HostsSummaryOKBody post v2 hosts summary o k body
swagger:model PostV2HostsSummaryOKBody
*/
type PostV2HostsSummaryOKBody struct {
	models.CybleComOdinAPIControllersV2IpservicesAPIResponse

	// data
	Data *models.EshandlerAggregate `json:"data,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PostV2HostsSummaryOKBody) UnmarshalJSON(raw []byte) error {
	// PostV2HostsSummaryOKBodyAO0
	var postV2HostsSummaryOKBodyAO0 models.CybleComOdinAPIControllersV2IpservicesAPIResponse
	if err := swag.ReadJSON(raw, &postV2HostsSummaryOKBodyAO0); err != nil {
		return err
	}
	o.CybleComOdinAPIControllersV2IpservicesAPIResponse = postV2HostsSummaryOKBodyAO0

	// PostV2HostsSummaryOKBodyAO1
	var dataPostV2HostsSummaryOKBodyAO1 struct {
		Data *models.EshandlerAggregate `json:"data,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataPostV2HostsSummaryOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataPostV2HostsSummaryOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PostV2HostsSummaryOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	postV2HostsSummaryOKBodyAO0, err := swag.WriteJSON(o.CybleComOdinAPIControllersV2IpservicesAPIResponse)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, postV2HostsSummaryOKBodyAO0)
	var dataPostV2HostsSummaryOKBodyAO1 struct {
		Data *models.EshandlerAggregate `json:"data,omitempty"`
	}

	dataPostV2HostsSummaryOKBodyAO1.Data = o.Data

	jsonDataPostV2HostsSummaryOKBodyAO1, errPostV2HostsSummaryOKBodyAO1 := swag.WriteJSON(dataPostV2HostsSummaryOKBodyAO1)
	if errPostV2HostsSummaryOKBodyAO1 != nil {
		return nil, errPostV2HostsSummaryOKBodyAO1
	}
	_parts = append(_parts, jsonDataPostV2HostsSummaryOKBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this post v2 hosts summary o k body
func (o *PostV2HostsSummaryOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.CybleComOdinAPIControllersV2IpservicesAPIResponse
	if err := o.CybleComOdinAPIControllersV2IpservicesAPIResponse.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostV2HostsSummaryOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postV2HostsSummaryOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postV2HostsSummaryOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post v2 hosts summary o k body based on the context it is used
func (o *PostV2HostsSummaryOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.CybleComOdinAPIControllersV2IpservicesAPIResponse
	if err := o.CybleComOdinAPIControllersV2IpservicesAPIResponse.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostV2HostsSummaryOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if swag.IsZero(o.Data) { // not required
			return nil
		}

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postV2HostsSummaryOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postV2HostsSummaryOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostV2HostsSummaryOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostV2HostsSummaryOKBody) UnmarshalBinary(b []byte) error {
	var res PostV2HostsSummaryOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
