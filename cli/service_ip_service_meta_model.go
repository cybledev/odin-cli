// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/cybledev/odin-cli/models"
	"github.com/spf13/cobra"
)

// Schema cli for ServiceIPServiceMeta

// register flags to command
func registerModelServiceIPServiceMetaFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerServiceIPServiceMetaPropCategory(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerServiceIPServiceMetaPropDesc(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerServiceIPServiceMetaPropName(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerServiceIPServiceMetaPropTags(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerServiceIPServiceMetaPropCategory(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagCategoryDescription := ``

	var flagCategoryName string
	if cmdPrefix == "" {
		flagCategoryName = "category"
	} else {
		flagCategoryName = fmt.Sprintf("%v.category", cmdPrefix)
	}

	var flagCategoryDefault string

	_ = cmd.PersistentFlags().String(flagCategoryName, flagCategoryDefault, flagCategoryDescription)

	return nil
}

func registerServiceIPServiceMetaPropDesc(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagDescDescription := ``

	var flagDescName string
	if cmdPrefix == "" {
		flagDescName = "desc"
	} else {
		flagDescName = fmt.Sprintf("%v.desc", cmdPrefix)
	}

	var flagDescDefault string

	_ = cmd.PersistentFlags().String(flagDescName, flagDescDefault, flagDescDescription)

	return nil
}

func registerServiceIPServiceMetaPropName(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagNameDescription := ``

	var flagNameName string
	if cmdPrefix == "" {
		flagNameName = "name"
	} else {
		flagNameName = fmt.Sprintf("%v.name", cmdPrefix)
	}

	var flagNameDefault string

	_ = cmd.PersistentFlags().String(flagNameName, flagNameDefault, flagNameDescription)

	return nil
}

func registerServiceIPServiceMetaPropTags(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: tags []string array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelServiceIPServiceMetaFlags(depth int, m *models.ServiceIPServiceMeta, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, CategoryAdded := retrieveServiceIPServiceMetaPropCategoryFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || CategoryAdded

	err, DescAdded := retrieveServiceIPServiceMetaPropDescFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || DescAdded

	err, NameAdded := retrieveServiceIPServiceMetaPropNameFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || NameAdded

	err, TagsAdded := retrieveServiceIPServiceMetaPropTagsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || TagsAdded

	return nil, retAdded
}

func retrieveServiceIPServiceMetaPropCategoryFlags(depth int, m *models.ServiceIPServiceMeta, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagCategoryName := fmt.Sprintf("%v.category", cmdPrefix)
	if cmd.Flags().Changed(flagCategoryName) {

		var flagCategoryName string
		if cmdPrefix == "" {
			flagCategoryName = "category"
		} else {
			flagCategoryName = fmt.Sprintf("%v.category", cmdPrefix)
		}

		flagCategoryValue, err := cmd.Flags().GetString(flagCategoryName)
		if err != nil {
			return err, false
		}
		m.Category = flagCategoryValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveServiceIPServiceMetaPropDescFlags(depth int, m *models.ServiceIPServiceMeta, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagDescName := fmt.Sprintf("%v.desc", cmdPrefix)
	if cmd.Flags().Changed(flagDescName) {

		var flagDescName string
		if cmdPrefix == "" {
			flagDescName = "desc"
		} else {
			flagDescName = fmt.Sprintf("%v.desc", cmdPrefix)
		}

		flagDescValue, err := cmd.Flags().GetString(flagDescName)
		if err != nil {
			return err, false
		}
		m.Desc = flagDescValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveServiceIPServiceMetaPropNameFlags(depth int, m *models.ServiceIPServiceMeta, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagNameName := fmt.Sprintf("%v.name", cmdPrefix)
	if cmd.Flags().Changed(flagNameName) {

		var flagNameName string
		if cmdPrefix == "" {
			flagNameName = "name"
		} else {
			flagNameName = fmt.Sprintf("%v.name", cmdPrefix)
		}

		flagNameValue, err := cmd.Flags().GetString(flagNameName)
		if err != nil {
			return err, false
		}
		m.Name = flagNameValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveServiceIPServiceMetaPropTagsFlags(depth int, m *models.ServiceIPServiceMeta, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagTagsName := fmt.Sprintf("%v.tags", cmdPrefix)
	if cmd.Flags().Changed(flagTagsName) {
		// warning: tags array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
